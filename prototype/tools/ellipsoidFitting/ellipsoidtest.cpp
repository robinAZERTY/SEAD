/*
cree par : robinAZERTY
version du : 30/09/2022
*/

#include <iostream>
#include "ellipsoidFitting.cpp"

void visu()
{
    const double samples[][3] =
        {{0.66, 0.71, 0.37}, {-0.23, 0.22, -1.17}, {-0.38, -0.44, 1.05}, {-0.51, 0.52, 0.36}, {0.18, 0.95, 0.41}, {-0.13, 0.78, 0.63}, {-0.29, 0.69, -0.56}, {0.19, -0.86, -0.22}, {0.15, 0.67, -0.95}, {-0.07, -0.02, 1.28}, {0.61, 0, 0.8}, {-0.78, -0.04, -0.08}, {-0.47, 0.51, -0.54}, {0.44, -0.3, -0.9}, {-0.23, -1, -0.09}, {-0.79, -0.3, 0.28}, {-0.38, 0.6, -0.56}, {0.55, 0.89, 0.07}, {-0.57, 0.48, -0.18}, {0.22, -0.82, 0.32}, {-0.52, 0.31, -0.73}, {0.35, 0.41, 1.09}, {-0.3, 0.77, -0.27}, {-0.07, -0.66, 0.95}, {-0.04, -0.92, 0.42}, {0.37, 0.98, -0.02}, {0.57, 0.71, 0.6}, {0.3, -0.76, 0.34}, {-0.52, -0.58, -0.81}, {0.72, 0.38, -0.54}, {0.36, 0.58, 0.97}, {0.12, 0.65, 0.98}, {0.3, 0.01, -1.19}, {-0.15, 0.68, 0.79}, {-0.46, 0.33, -0.82}, {-0.41, -0.67, 0.85}, {0.44, 0.68, 0.81}, {-0.29, -0.91, -0.52}, {0.2, 0.91, 0.54}, {-0.59, -0.01, 0.84}, {-0.61, -0.8, 0.3}, {-0.34, 0.74, 0.23}, {0.1, 0.18, -1.26}, {0.09, 0.45, -1.15}, {-0.18, 0.77, 0.58}, {-0.58, 0.41, -0.35}, {0.17, 0.83, -0.71}, {0.51, 0.62, 0.8}, {0.72, 0.15, -0.56}, {-0.59, -0.3, -0.86}, {0.44, -0.52, 0.61}, {-0.61, -0.62, -0.63}, {-0.59, -0.63, 0.66}, {-0.4, 0.58, -0.57}, {0.09, -0.18, -1.24}, {-0.47, -0.23, -1.04}, {0.36, 0.92, 0.42}, {-0.04, -0.53, 1.08}, {-0.55, 0.37, -0.58}, {0.4, 0, 1.1}, {-0.51, -0.51, -0.88}, {-0.34, 0.72, 0.35}, {-0.69, 0.01, -0.58}, {0.72, 0.61, 0.3}, {-0.59, 0.19, -0.7}, {-0.12, -0.93, 0.46}, {-0.16, -0.93, -0.46}, {-0.09, 0.92, -0.13}, {0.47, -0.14, 0.97}, {0.43, 0.72, -0.77}, {-0.69, -0.54, 0.53}, {0.01, -0.81, 0.69}, {0.38, -0.37, 0.92}, {0.55, 0.34, 0.91}, {0.66, 0.13, -0.74}, {0.45, 0.68, 0.8}, {-0.06, -0.62, -1}, {0.54, -0.14, -0.84}, {-0.38, 0.71, 0.04}, {-0.59, -0.08, -0.86}, {0.56, 0.88, 0}, {0.69, 0.66, 0.32}, {-0.02, -0.73, 0.84}, {0.55, -0.36, 0.6}, {-0.62, 0.38, 0.26}, {0.29, 0.99, -0.08}, {0.15, 0.23, -1.24}, {-0.4, 0.19, -1.02}, {0.27, -0.53, -0.88}, {-0.06, 0.07, -1.27}, {-0.46, 0.02, 1.03}, {0.65, 0.58, -0.58}, {-0.61, -0.5, -0.75}, {0.23, -0.48, -0.97}, {-0.64, 0.36, -0.15}, {-0.62, -0.59, -0.65}, {-0.54, -0.72, -0.64}, {-0.39, 0.26, -0.99}, {0.27, 0.43, -1.12}, {0.59, -0.44, 0.09}};

    /*
    should give:
    {{0.77, 0.22, 0},{0, 1, 0},{0, 0, 1.28}}
    */

    const int nSamples = sizeof(samples) / sizeof(samples[0]);

    // create a ellipsoid
    Ellipsoid ellipsoid;
    ellipsoid.points = (double *)samples;
    ellipsoid.n = nSamples;

    std::cout << ellipsoid.n << " samples" << std::endl;

    // find the best A and B
    std::cout << "iteration = " << ellipsoid.fit()[12] << std::endl;
    // print the parameters
    std::cout << ellipsoid.A.to_str() << std::endl;
    std::cout << ellipsoid.B.to_str() << std::endl;
}

int main()
{
    visu();
    return 0;
}